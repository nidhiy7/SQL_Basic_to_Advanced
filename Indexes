# Indexes and Performance Optimization:

-- index is a data structure that improves the speed of data retrieval operations on a database table at the cost of additional writes and storage space

1. Primary Key Index 
A primary index is automatically created when a primary key is defined. It ensures uniqueness and orders the data in a way that allows for fast access.

CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    FirstName NVARCHAR(50),
);

 2. Unique Index
A unique index ensures that all values in the indexed column(s) are distinct.

CREATE UNIQUE INDEX idx_unique_email ON Employees(Email);

3. Clustered Index
A clustered index sorts and stores the data rows in the table based on the indexed column's key values.

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY CLUSTERED,
    OrderDate DATETIME,
    CustomerID INT
);

4. Non-Clustered Index
A non-clustered index creates a separate structure from the data rows, containing pointers to the data.

CREATE INDEX idx_lastname ON Employees(LastName);

5. Composite Index
A composite index is an index on two or more columns.

CREATE INDEX idx_name ON Employees(LastName, FirstName);

6. Bitmap Index
Bitmap indexes use bitmaps and are effective for columns with low cardinality.

-- Bitmap indexes are often supported in specific database systems like Oracle.
CREATE BITMAP INDEX idx_gender ON Employees(Gender);

7. Filtered Index
A filtered index is a non-clustered index that includes a WHERE clause.

CREATE INDEX idx_active_employees ON Employees(Status) WHERE Status = 'Active';

-- Main
-- Primary Index (Primary Key)
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    FirstName NVARCHAR(50),
    LastName NVARCHAR(50),
    Email NVARCHAR(100)
);

-- Unique Index
CREATE UNIQUE INDEX idx_unique_email ON Employees(Email);

-- Clustered Index
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY CLUSTERED,
    OrderDate DATETIME,
    CustomerID INT
);

-- Non-Clustered Index
CREATE INDEX idx_lastname ON Employees(LastName);

-- Composite Index
CREATE INDEX idx_name ON Employees(LastName, FirstName);

-- Bitmap Index (example for Oracle)
CREATE BITMAP INDEX idx_gender ON Employees(Gender);

-- Filtered Index
CREATE INDEX idx_active_employees ON Employees(Status) WHERE Status = 'Active';

-- Full-Text Index (example for SQL Server)
CREATE FULLTEXT INDEX ON Employees(Email, FirstName, LastName)
    KEY INDEX idx_fulltext_key;

-- Spatial Index
CREATE SPATIAL INDEX idx_location ON Locations(GeographyColumn);

-- Hash Index (example for PostgreSQL)
CREATE INDEX idx_hash_email ON Employees USING HASH (Email);




